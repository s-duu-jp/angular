load("//tools:defaults.bzl", "app_bundle", "jasmine_node_test", "ng_module", "ts_devserver", "ts_library")
load("//tools/symbol-extractor:index.bzl", "js_expected_symbol_test")
load("@npm//http-server:index.bzl", "http_server")

package(default_visibility = ["//visibility:public"])

ng_module(
    name = "router",
    srcs = [
        "index.ts",
    ],
    deps = [
        "//packages/core",
        "//packages/platform-browser",
        "//packages/router",
    ],
)

app_bundle(
    name = "bundle",
    entry_point = ":index.ts",
    deps = [
        ":router",
        "//packages/core",
        "//packages/platform-browser",
        "//packages/router",
        "@npm//rxjs",
    ],
)

ts_library(
    name = "test_lib",
    testonly = True,
    srcs = glob(["*_spec.ts"]),
    deps = [
        "//packages:types",
        "//packages/compiler",
        "//packages/core",
        "//packages/core/testing",
        "//packages/private/testing",
    ],
)

jasmine_node_test(
    name = "test",
    data = [
        ":bundle",
        ":bundle.debug.min.js",
        ":bundle.js",
        ":bundle.min.js",
    ],
    deps = [":test_lib"],
)

js_expected_symbol_test(
    name = "symbol_test",
    src = ":bundle.debug.min.js",
    golden = ":bundle.golden_symbols.json",
)

genrule(
    name = "tslib",
    srcs = [
        "@npm//:node_modules/tslib/tslib.js",
    ],
    outs = [
        "tslib.js",
    ],
    cmd = "cp $< $@",
)

ts_devserver(
    name = "devserver",
    entry_module = "@angular/core/test/bundling/router",
    scripts = [
        "//tools/rxjs:rxjs_umd_modules",
    ],
    serving_path = "/bundle.min.js",
    static_files = [
        "index.html",
        ":tslib",
    ],
    deps = [":router"],
)

http_server(
    name = "prodserver",
    data = [
        "index.html",
        ":bundle.debug.min.js",
        ":bundle.min.js",
    ],
)
